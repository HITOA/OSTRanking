<div class="mt-20 flex flex-col items-center justify-center mx-auto lg:py-0 container">
    <div class="flex flex-col base-container items-center w-9/12">
        <a id="song-title" class="text-black dark:text-white font-medium text-5xl hover:underline" href="">Song Title</a>
        <iframe id="youtube-player" class="hidden w-full aspect-square md:aspect-video" loading="lazy" src=""></iframe>
        <input type="number" id="score-input" value="0" min="0" max="100" class="bg-main-50/25 dark:bg-main-700 border dark:border-main-600 shadow-inner text-base text-black dark:text-white rounded-lg block w-20 focus:outline-0 text-center font-medium text-4xl" name="password" autocomplete="off" required>
        <div class="flex">
            <% for(var i = 0; i < 10; ++i) { %>
                <div onclick="setScore(<%- (i + 1) * 10 %>)" class="pointer-cursor flex stroke-main-950 fill-main-700 hover:scale-125 transition transition-scale">
                    <svg id="halfheart-<%- i %>" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="w-14 h-14">
                        <path d="M11.645 20.91l-.007-.003-.022-.012a15.247 15.247 0 01-.383-.218 25.18 25.18 0 01-4.244-3.17C4.688 15.36 2.25 12.174 2.25 8.25 2.25 5.322 4.714 3 7.688 3A5.5 5.5 0 0112 5.052 5.5 5.5 0 0116.313 3c2.973 0 5.437 2.322 5.437 5.25 0 3.925-2.438 7.111-4.739 9.256a25.175 25.175 0 01-4.244 3.17 15.247 15.247 0 01-.383.219l-.022.012-.007.004-.003.001a.752.752 0 01-.704 0l-.003-.001z"/>
                    </svg>     
                </div>
            <% } %>
        </div>
    </div>
</div>
<script>
    const ost_id = <%- ost_id %>;
</script>
<script>
    function setHeartsColor(idx) {
        for (var i = 0; i < 10; ++i) {
            const halfheartElm = document.getElementById(`halfheart-${i}`);

            if (i < idx) {
                halfheartElm.classList.add("fill-red-500");
            } else {
                halfheartElm.classList.remove("fill-red-500");
            }
        }
    }

    function setScore(score, send = true) {
        document.getElementById("score-input").value = score;
        setHeartsColor(Math.floor(score / 10));

        if (!send)
            return;

        const urlParams = new URLSearchParams(window.location.search);

        setOstScore(ost_id, score);
    }
</script>
<script>
    const urlParams = new URLSearchParams(window.location.search);

    //Source : https://stackoverflow.com/a/8260383
    function youtubeParser(url){
        var regExp = /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#&?]*).*/;
        var match = url.match(regExp);
        return (match&&match[7].length==11)? match[7] : false;
    }

    function setPlayer(url) {
        if ((id = youtubeParser(url))) {
            var ytbPlayer = document.getElementById("youtube-player");
            ytbPlayer.src = `https://www.youtube.com/embed/${id}`;
            ytbPlayer.classList.remove("hidden");
            return;
        }
    }

    function setRatingInterface(ost) {
        console.log(ost);

        setPlayer(ost.url);

        const songTitle = document.getElementById("song-title");

        songTitle.href = ost.url;
        
        songTitle.innerHTML = ost.alternate_name ? `${ost.name} - ${ost.alternate_name}` : ost.name;
    }

    getOstById(ost_id).then((ost) => {
        setRatingInterface(ost);
        getOstScore(ost.id).then((score) => {
            setScore(score.score ? score.score : 50, false);
            console.log(score);
        }).catch((r) => {
            console.log(r);
        })
    }).catch((r) => {
        console.log(r);
    })
</script>